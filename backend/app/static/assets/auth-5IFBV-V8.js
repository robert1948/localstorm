const n="https://www.cape-control.com/api";async function a(t){try{const e=await fetch(`${n}/auth/v2/validate-email?email=${encodeURIComponent(t)}`,{method:"GET",headers:{"Content-Type":"application/json"}}),r=e.headers.get("content-type");if(!r||!r.includes("application/json"))throw new Error("Server returned non-JSON response");if(!e.ok){const o=await e.json();throw new Error(o.detail||o.message||"Email validation failed")}return await e.json()}catch(e){return console.error("Email validation error:",e),{available:null,reason:"validation_error",message:"Unable to validate email. Please try again."}}}async function i(t){try{const e=await fetch(`${n}/auth/v2/register`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),r=e.headers.get("content-type");if(!r||!r.includes("application/json"))throw console.error("Non-JSON response received:",await e.text()),new Error("Server error: Invalid response format");const o=await e.json();if(!e.ok)throw new Error(o.detail||o.message||"Registration failed");return o}catch(e){throw console.error("Registration error:",e),e}}async function s(t,e){try{const r=await fetch(`${n}/auth/v2/login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:t,password:e})});if(!r.ok){const o=await r.json();throw new Error(o.detail||"Login failed")}return await r.json()}catch(r){throw console.error("Login error:",r),r}}export{s as l,i as r,a as v};
